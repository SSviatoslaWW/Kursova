// Model/WeatherModels.swift

import Foundation

// =================================================================
// MARK: - 1. –°–¢–†–£–ö–¢–£–†–ò –î–õ–Ø –ü–û–¢–û–ß–ù–û–á –ü–û–ì–û–î–ò (API /weather)
// =================================================================

// –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–ª—è –¥–µ–∫–æ–¥—É–≤–∞–Ω–Ω—è –≤–∫–ª–∞–¥–µ–Ω–∏—Ö –æ–±'—î–∫—Ç—ñ–≤ JSON

struct Coordinates: Decodable {
    let lon: Double // –î–æ–≤–≥–æ—Ç–∞
    let lat: Double // –®–∏—Ä–æ—Ç–∞
}
struct Wind: Decodable {
    let speed: Double? // –®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É
    let deg: Int?      // –ù–∞–ø—Ä—è–º–æ–∫ –≤—ñ—Ç—Ä—É
}
struct Clouds: Decodable {
    let all: Int // –•–º–∞—Ä–Ω—ñ—Å—Ç—å —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö
}
struct SystemInfo: Decodable {
    let country: String // –ö–æ–¥ –∫—Ä–∞—ó–Ω–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, UA)
    let sunrise: Int    // –ß–∞—Å —Å—Ö–æ–¥—É —Å–æ–Ω—Ü—è (Unix timestamp)
    let sunset: Int     // –ß–∞—Å –∑–∞—Ö–æ–¥—É —Å–æ–Ω—Ü—è (Unix timestamp)
}

// –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–≥–æ–¥–∏
struct CurrentWeatherResponse: Decodable {
    let coord: Coordinates
    let weather: [WeatherCondition] // –ú–∞—Å–∏–≤ –∑ –æ—Å–Ω–æ–≤–Ω–∏–º–∏ —É–º–æ–≤–∞–º–∏ —Ç–∞ —ñ–∫–æ–Ω–∫–æ—é
    let base: String
    let main: MainWeather       // –û–±'—î–∫—Ç –∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ—é —Ç–∞ —Ç–∏—Å–∫–æ–º
    let visibility: Int?
    let wind: Wind?
    let clouds: Clouds?
    let dt: Int                 // –ß–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö (Unix timestamp)
    let sys: SystemInfo
    let timezone: Int
    let id: Int
    let name: String            // –ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞, –ø–æ–≤–µ—Ä–Ω—É—Ç–∞ API
    let cod: Int
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ (Main)
struct MainWeather: Decodable {
    let temp: Double    // –ü–æ—Ç–æ—á–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)
    let tempMin: Double // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    let tempMax: Double // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    let humidity: Int   // –í–æ–ª–æ–≥—ñ—Å—Ç—å (%)
    let pressure: Int   // –¢–∏—Å–∫ (–≥–ü–∞)
    
    // –ö–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ snake_case —É JSON
    enum CodingKeys: String, CodingKey {
        case temp, humidity, pressure
        case tempMin = "temp_min"
        case tempMax = "temp_max"
    }
    
    // –û–±—á–∏—Å–ª—é–≤–∞–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏
    var temperatureString: String {
        return String(format: "%.0f¬∞C", temp)
    }
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –ø–æ–≥–æ–¥–Ω–∏—Ö —É–º–æ–≤ (WeatherCondition)
struct WeatherCondition: Decodable {
    let main: String        // –û—Å–Ω–æ–≤–Ω–∞ –≥—Ä—É–ø–∞ (Clear, Rain, Snow) - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –≥—Ä–∞–¥—ñ—î–Ω—Ç–∞
    let description: String // –î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å
    let icon: String        // –ö–æ–¥ —ñ–∫–æ–Ω–∫–∏
    
    // –û–±—á–∏—Å–ª—é–≤–∞–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è URL —ñ–∫–æ–Ω–∫–∏
    var iconURL: URL? {
        // –ü—Ä–∏–º—ñ—Ç–∫–∞: –ü–æ—Ç—Ä—ñ–±–µ–Ω –¥–æ—Å—Ç—É–ø –¥–æ Constants.iconURL
        Constants.iconURL(iconCode: icon)
    }
}

// =================================================================
// MARK: - 2. –°–¢–†–£–ö–¢–£–†–ò –î–õ–Ø –ü–†–û–ì–ù–û–ó–£ (API /forecast)
// =================================================================

// –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø—Ä–æ–≥–Ω–æ–∑—É
struct ForecastResponse: Decodable {
    let list: [ForecastItem] // –ú–∞—Å–∏–≤ 3-–≥–æ–¥–∏–Ω–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É –ø—Ä–æ–≥–Ω–æ–∑—É (–æ–¥–∏–Ω 3-–≥–æ–¥–∏–Ω–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª)
struct ForecastItem: Decodable {
    let dt: Int             // –ß–∞—Å –ø—Ä–æ–≥–Ω–æ–∑—É (Unix timestamp)
    let main: MainWeather   // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è —Ü—å–æ–≥–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É
    let weather: [WeatherCondition] // –ü–æ–≥–æ–¥–Ω—ñ —É–º–æ–≤–∏ –¥–ª—è —Ü—å–æ–≥–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É
    
    // –û–±—á–∏—Å–ª—é–≤–∞–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å: –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è Unix timestamp —É Date
    var date: Date {
        Date(timeIntervalSince1970: TimeInterval(dt))
    }
    
    // üõë fullDayName: –ü–æ–≤–Ω–∞ –Ω–∞–∑–≤–∞ –¥–Ω—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    var fullDayName: String {
        let formatter = DateFormatter()
        formatter.dateFormat = "EEEE" // –§–æ—Ä–º–∞—Ç: –ü–æ–Ω–µ–¥—ñ–ª–æ–∫, –í—ñ–≤—Ç–æ—Ä–æ–∫
        formatter.locale = Locale(identifier: "uk_UA")
        return formatter.string(from: date).capitalized
    }
}
