// DailyForecastItemView.swift

import SwiftUI

struct DailyForecastItemView: View {
    let item: ForecastItem
    @ObservedObject var viewModel: WeatherViewModel
    
    @State private var showingDetail = false
    
    var body: some View {
        // üõë –û–ë–ì–û–†–¢–ê–Ñ–ú–û –£–°–ï –í –ö–ù–û–ü–ö–£
        Button(action: {
            showingDetail = true // ‚¨ÖÔ∏è –ê–∫—Ç–∏–≤—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
        }) {
            HStack {
                // –î–µ–Ω—å —Ç–∏–∂–Ω—è (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–≤–Ω—É –Ω–∞–∑–≤—É)
                Text(item.fullDayName)
                    .font(.title3).bold()
                    .frame(width: 80, alignment: .leading)
                
                Spacer()
                
                // –Ü–∫–æ–Ω–∫–∞
                if let url = item.weather.first?.iconURL {
                    AsyncImage(url: url) { phase in
                        if let image = phase.image {
                            image.resizable().frame(width: 50, height: 50)
                        } else {
                            ProgressView().frame(width: 50, height: 50).tint(.white)
                        }
                    }
                }
                
                Spacer()
                
                // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
                Text(item.main.temperatureString)
                    .font(.title2)
                    .bold()
                    .frame(width: 60, alignment: .trailing)
            }
            // üõë –ö–†–û–ö 1: –†–æ–∑—Ç—è–≥—É—î–º–æ HStack –Ω–∞ –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É —à–∏—Ä–∏–Ω—É
            .frame(maxWidth: .infinity)
            
            // üõë –ö–†–û–ö 2: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–ª—ñ—Ä –≤–º—ñ—Å—Ç—É –±—ñ–ª–∏–º –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç—É
            .foregroundColor(.white)
            
            // üõë –ö–†–û–ö 3: –°—Ç–∏–ª—ñ –∫–∞—Ä—Ç–∫–∏
            .padding(.vertical, 10)
            .padding(.horizontal, 20)
            .background(Color.white.opacity(0.15))
            .cornerRadius(15)
            
            // üõë –ö–†–û–ö 4: –§–Ü–ö–° –ö–õ–Ü–ö–ê–ë–ï–õ–¨–ù–û–°–¢–Ü: –ó–º—É—à—É—î –∫–Ω–æ–ø–∫—É –∑–∞–π–º–∞—Ç–∏ –≤—Å—é —Ñ–æ—Ä–º—É
            .contentShape(Rectangle())
            
        } // –ó–∞–∫—Ä–∏—Ç—Ç—è Button
        .buttonStyle(.plain) // –†–æ–±–∏—Ç—å —É—Å—é –æ–±–ª–∞—Å—Ç—å –∫–ª—ñ–∫–∞–±–µ–ª—å–Ω–æ—é
        
        // üõë –í–ò–î–ê–õ–ï–ù–û: –ó–∞–π–≤—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏, –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ Button
        
        // –ù–û–í–ò–ô –ï–õ–ï–ú–ï–ù–¢: –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        .sheet(isPresented: $showingDetail) {
            
            let dateKey = Calendar.current.startOfDay(for: item.date)
            let itemsForDay = viewModel.groupedDailyForecast[dateKey] ?? []
            
            DailyDetailView(
                dayForecast: itemsForDay,
                dayName: item.fullDayName
            )
        }
    }
}
