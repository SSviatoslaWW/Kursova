// View/FavoritesView.swift

import SwiftUI

// MARK: - FavoritesView (–ì–æ–ª–æ–≤–Ω–∞ View)

struct FavoritesView: View {
    
    // MARK: - –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –°—Ç–∞–Ω
    
    @ObservedObject var favoritesVM: FavoritesViewModel
    @ObservedObject var weatherVM: WeatherViewModel
    
    // üõë –°—Ç–∞–Ω: –†–µ–∂–∏–º —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    @State private var isEditing: Bool = false
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –∑–º—ñ—â–µ–Ω–Ω—è –≤–º—ñ—Å—Ç—É –≤ —Ä–µ–∂–∏–º—ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    private let editingOffset: CGFloat = 20
    private let paddingOffset: CGFloat = 16
    private let itemSpacing: CGFloat = 12
    
    // MARK: - Body View
    
    var body: some View {
        GeometryReader { geometry in
            ZStack {
                // 1. –ì—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–π –§–æ–Ω (Global)
                LinearGradient(
                    gradient: Gradient(colors: weatherVM.getBackgroundGradient()),
                    startPoint: .topLeading,
                    endPoint: .bottomTrailing
                )
                .ignoresSafeArea(.all)
                
                VStack(spacing: 0) {
                    
                    // 1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ –ö–Ω–æ–ø–∫–∞ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
                    HeaderView(isEditing: $isEditing)
                    
                    // 2. –°–ø–∏—Å–æ–∫ (ScrollView)
                    ScrollView {
                        LazyVStack(spacing: itemSpacing) {
                            
                            // –ó–∞–≥–ª—É—à–∫–∞, —è–∫—â–æ –Ω–µ–º–∞—î –º—ñ—Å—Ç
                            if favoritesVM.favoriteCities.isEmpty {
                                EmptyStateView()
                            }
                            
                            // üõë –ö–∞—Ä—Ç–∫–∏ –º—ñ—Å—Ç
                            ForEach(favoritesVM.favoriteCities.indices, id: \.self) { index in
                                CityCardRow(
                                    city: favoritesVM.favoriteCities[index],
                                    index: index,
                                    isEditing: isEditing,
                                    editingOffset: editingOffset,
                                    paddingOffset: paddingOffset,
                                    weatherVM: weatherVM,
                                    favoritesVM: favoritesVM
                                )
                            } // –ó–∞–∫—Ä–∏—Ç—Ç—è ForEach
                            
                            // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π Spacer –¥–ª—è —Ä–æ–∑—Ç—è–≥—É–≤–∞–Ω–Ω—è —Ñ–æ–Ω—É
                            Spacer(minLength: geometry.size.height - 300)
                            
                        } // –ó–∞–∫—Ä–∏—Ç—Ç—è LazyVStack
                        .padding(.horizontal, 16)
                        
                    } // –ó–∞–∫—Ä–∏—Ç—Ç—è ScrollView
                    .scrollBounceBehavior(.basedOnSize) // –£–º–æ–≤–Ω–µ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –≤—ñ–¥—Å–∫–æ–∫–æ–º
                    
                } // –ó–∞–∫—Ä–∏—Ç—Ç—è VStack (–æ—Å–Ω–æ–≤–Ω–∏–π)
                .foregroundColor(.white)
                .shadow(color: .black.opacity(0.6), radius: 3, x: 0, y: 1)
            } // –ó–∞–∫—Ä–∏—Ç—Ç—è ZStack
        } // –ó–∞–∫—Ä–∏—Ç—Ç—è GeometryReader
    }
    
    // =============================================================
    // MARK: - –ü–†–ò–í–ê–¢–ù–Ü –°–¢–†–£–ö–¢–£–†–ò UI (Subviews)
    // =============================================================
    
    /// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É —Å–ø–∏—Å–∫—É.
    private struct EmptyStateView: View {
        var body: some View {
            Text("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–î–æ–¥–∞—Ç–∏ –¥–æ –£–ª—é–±–ª–µ–Ω–∏—Ö' –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –µ–∫—Ä–∞–Ω—ñ.")
                .foregroundColor(.white.opacity(0.8))
                .padding(.top, 40)
        }
    }
    
    /// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –≤–µ—Ä—Ö–Ω—å–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞ –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è.
    private struct HeaderView: View {
        @Binding var isEditing: Bool
        
        var body: some View {
            HStack {
                Text("–£–ª—é–±–ª–µ–Ω—ñ –ú—ñ—Å—Ç–∞")
                    .font(.largeTitle).bold()
                Spacer()
                
                // –ö–ù–û–ü–ö–ê –†–ï–î–ê–ì–£–í–ê–ù–ù–Ø
                Button(isEditing ? "Done" : "Edit") {
                    withAnimation {
                        isEditing.toggle()
                    }
                }
                .foregroundColor(.white)
            }
            .padding(.top, 50)
            .padding(.horizontal, 16)
            .padding(.bottom, 20)
        }
    }
    
    /// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–∫—Ä–µ–º–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º—ñ—Å—Ç–∞ (–ö–∞—Ä—Ç–∫–∏)
    private struct CityCardRow: View {
        let city: String
        let index: Int
        let isEditing: Bool
        let editingOffset: CGFloat
        let paddingOffset: CGFloat
        @ObservedObject var weatherVM: WeatherViewModel
        @ObservedObject var favoritesVM: FavoritesViewModel

        var body: some View {
            HStack(spacing: 0) { // –ì–æ–ª–æ–≤–Ω–∏–π HStack –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—î—é
                
                // üõë –ö–ù–û–ü–ö–ê –í–ò–î–ê–õ–ï–ù–ù–Ø: –ó–ê–í–ñ–î–ò –ó–ù–ê–•–û–î–ò–¢–¨–°–Ø –ó–õ–Ü–í–ê
                if isEditing {
                    Button(action: {
                        withAnimation {
                            favoritesVM.removeCity(at: IndexSet(integer: index))
                        }
                    }) {
                        Image(systemName: "minus.circle.fill")
                            .foregroundColor(.red)
                            .scaleEffect(1.2)
                    }
                    // üõë –§–Ü–ö–° –ü–û–ó–ò–¶–Ü–á: –ó–º—ñ—â—É—î–º–æ –∫–Ω–æ–ø–∫—É –≤–ª—ñ–≤–æ –Ω–∞ –≤—ñ–¥'—î–º–Ω—É –≤–µ–ª–∏—á–∏–Ω—É
                    .frame(width: editingOffset, alignment: .leading)
                    .offset(x: 10) // –ù–µ–≥–∞—Ç–∏–≤–Ω–∏–π –∑—Å—É–≤ –¥–ª—è –∑–±–ª–∏–∂–µ–Ω–Ω—è –∑ –∫–∞—Ä—Ç–∫–æ—é
                }

                // üõë –û–°–ù–û–í–ù–ò–ô –í–ú–Ü–°–¢ –ö–ê–†–¢–ö–ò (–ö–ª—ñ–∫–∞–±–µ–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å)
                Button(action: {
                    if !isEditing {
                        weatherVM.fetchWeather(city, nil, nil)
                    }
                }) {
                    HStack {
                        Text(city).foregroundColor(.white)
                            .lineLimit(1)
                            .padding(.leading, isEditing ? 8 : 16) // ‚¨ÖÔ∏è –ö–û–ú–ü–ï–ù–°–ê–¶–Ü–ô–ù–ò–ô –í–Ü–î–°–¢–£–ü
                        Spacer()
                        Image(systemName: "cloud.sun").foregroundColor(.white.opacity(0.8))
                            .padding(.trailing, 25)
                    }
                    .padding(.vertical, 15)
                    .buttonStyle(.plain)
                    
                    // üõë –°–¢–ò–õ–Ü –ö–ê–†–¢–ö–ò
                    .background(Color.white.opacity(0.15))
                    .cornerRadius(10)
                    .shadow(color: .black.opacity(0.3), radius: 3, x: 0, y: 1)
                }
                
                // üõë –ï–§–ï–ö–¢ –ó–ú–Ü–©–ï–ù–ù–Ø –í–ú–Ü–°–¢–£: –ó–º—ñ—â—É—î–º–æ –≤—Å—é –∫–∞—Ä—Ç–∫—É –≤–ø—Ä–∞–≤–æ
                .offset(x: isEditing ? editingOffset : 0)
                
            } // –ó–∞–∫—Ä–∏—Ç—Ç—è HStack
            .clipped() // –û–±—Ä—ñ–∑–∞—î–º–æ –≤–º—ñ—Å—Ç
        }
    }
}
