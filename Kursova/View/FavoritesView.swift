// View/FavoritesView.swift

import SwiftUI

struct FavoritesView: View {
    @ObservedObject var favoritesVM: FavoritesViewModel
    @ObservedObject var weatherVM: WeatherViewModel
    
    var body: some View {
        // üõë –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GeometryReader
        GeometryReader { geometry in
            ZStack {
                // 1. –ì—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–π –§–æ–Ω (–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É ContentView)
                LinearGradient(
                    gradient: Gradient(colors: weatherVM.getBackgroundGradient()),
                    startPoint: .topLeading,
                    endPoint: .bottomTrailing
                )
                .ignoresSafeArea(.all)
                
                VStack {
                    
                    // üõë –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø –ó–ê–ì–û–õ–û–í–ö–ê –Ü –ö–ù–û–ü–ö–ò –†–ï–î–ê–ì–£–í–ê–ù–ù–Ø
                    HStack {
                        Text("–£–ª—é–±–ª–µ–Ω—ñ –ú—ñ—Å—Ç–∞")
                            .font(.largeTitle).bold()
                        
                        Spacer()
                        
                        // üõë –ö–ù–û–ü–ö–ê "Edit"/"Done"
                        EditButton()
                            .foregroundColor(.white)
                    }
                    .padding(.top, 50)
                    .padding(.horizontal)
                    
                    // üõë –°–ø–∏—Å–æ–∫
                    List {
                        if favoritesVM.favoriteCities.isEmpty {
                            Text("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–î–æ–¥–∞—Ç–∏ –¥–æ –£–ª—é–±–ª–µ–Ω–∏—Ö' –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –µ–∫—Ä–∞–Ω—ñ.")
                                .foregroundColor(.secondary)
                                .listRowBackground(Color.white.opacity(0.8))
                        }
                        
                        ForEach(favoritesVM.favoriteCities, id: \.self) { city in
                            Button(action: {
                                weatherVM.fetchWeather(city)
                            }) {
                                HStack {
                                    Text(city).foregroundColor(.primary)
                                    Spacer()
                                    Image(systemName: "cloud.sun").foregroundColor(.gray)
                                }
                            }
                            .listRowBackground(Color.white.opacity(0.8))
                        }
                        // üõë –§–£–ù–ö–¶–Ü–û–ù–ê–õ –í–ò–î–ê–õ–ï–ù–ù–Ø: –ó–ê–õ–ò–®–ê–Ñ–ú–û –¢–£–¢
                        .onDelete(perform: favoritesVM.removeCity)
                        
                    } // –ó–∞–∫—Ä–∏—Ç—Ç—è List
                    
                    // üõë –ö–õ–Æ–ß–û–í–Ü –ú–û–î–ò–§–Ü–ö–ê–¢–û–†–ò –°–ü–ò–°–ö–£
                    .scrollContentBackground(.hidden)
                    .background(Color.clear)
                    
                    // –í–ò–î–ê–õ–Ø–Ñ–ú–û minHeight –¢–ê –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–ú–û SPACER –ó–í–ï–†–•–£
                    // –¢–ê –ó–ù–ò–ó–£ –î–õ–Ø –ö–†–ê–©–û–ì–û –ö–û–ù–¢–†–û–õ–Æ
                    
                } // –ó–∞–∫—Ä–∏—Ç—Ç—è VStack
                .foregroundColor(.white)
                .shadow(color: .black.opacity(0.6), radius: 3, x: 0, y: 1)
            } // –ó–∞–∫—Ä–∏—Ç—Ç—è ZStack
        } // –ó–∞–∫—Ä–∏—Ç—Ç—è GeometryReader
    }
}
