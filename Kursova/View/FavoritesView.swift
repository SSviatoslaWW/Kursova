// View/FavoritesView.swift

import SwiftUI

struct FavoritesView: View {
    @ObservedObject var favoritesVM: FavoritesViewModel
    @ObservedObject var weatherVM: WeatherViewModel
    
    // üõë –î–û–î–ê–ù–û: –°—Ç–∞–Ω –¥–ª—è —Ä–µ–∂–∏–º—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    @State private var isEditing: Bool = false
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –∑–º—ñ—â–µ–Ω–Ω—è –≤–º—ñ—Å—Ç—É
    private let editingOffset: CGFloat = 20
    
    var body: some View {
        GeometryReader { geometry in
            ZStack {
                // 1. –ì—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–π –§–æ–Ω
                LinearGradient(
                    gradient: Gradient(colors: weatherVM.getBackgroundGradient()),
                    startPoint: .topLeading,
                    endPoint: .bottomTrailing
                )
                .ignoresSafeArea(.all)
                
                VStack {
                    
                    // 1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ Edit Button
                    HStack {
                        Text("–£–ª—é–±–ª–µ–Ω—ñ –ú—ñ—Å—Ç–∞")
                            .font(.largeTitle).bold()
                        Spacer()
                        
                        // –ö–ù–û–ü–ö–ê –†–ï–î–ê–ì–£–í–ê–ù–ù–Ø
                        Button(isEditing ? "Done" : "Edit") {
                            withAnimation {
                                isEditing.toggle() // –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ —Å—Ç–∞–Ω
                            }
                        }
                        .foregroundColor(.white)
                    }
                    .padding(.top, 50)
                    .padding(.horizontal, 16)
                    
                    // 2. –°–ø–∏—Å–æ–∫ (ScrollView)
                    ScrollView {
                        LazyVStack(spacing: 12) {
                            
                            // –ó–∞–≥–ª—É—à–∫–∞
                            if favoritesVM.favoriteCities.isEmpty {
                                Text("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–î–æ–¥–∞—Ç–∏ –¥–æ –£–ª—é–±–ª–µ–Ω–∏—Ö' –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –µ–∫—Ä–∞–Ω—ñ.")
                                    .foregroundColor(.white.opacity(0.8))
                                    .padding(.top, 40)
                            }
                            
                            // üõë –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–ú–û FOREACH
                            ForEach(favoritesVM.favoriteCities.indices, id: \.self) { index in
                                let city = favoritesVM.favoriteCities[index]
                                
                                HStack(spacing: 0) { // ‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–∏–π HStack –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—î—é
                                    
                                    // üõë –ö–ù–û–ü–ö–ê –í–ò–î–ê–õ–ï–ù–ù–Ø: –ó–ê–í–ñ–î–ò –ó–ù–ê–•–û–î–ò–¢–¨–°–Ø –ó–õ–Ü–í–ê
                                    if isEditing {
                                        Button(action: {
                                            withAnimation {
                                                favoritesVM.removeCity(at: IndexSet(integer: index))
                                            }
                                        }) {
                                            Image(systemName: "minus.circle.fill")
                                                .foregroundColor(.red)
                                                .scaleEffect(1.2)
                                        }
                                        .frame(width: editingOffset, alignment: .leading) // –§—ñ–∫—Å—É—î–º–æ —à–∏—Ä–∏–Ω—É
                                        .padding(.leading, 52)
                                    }

                                    // üõë –û–°–ù–û–í–ù–ò–ô –í–ú–Ü–°–¢ –ö–ê–†–¢–ö–ò
                                    Button(action: {
                                        if !isEditing {
                                            weatherVM.fetchWeather(city, nil, nil)
                                        }
                                    }) {
                                        HStack {
                                            Text(city).foregroundColor(.white)
                                            Spacer()
                                            Image(systemName: "cloud.sun").foregroundColor(.white.opacity(0.8))
                                                .padding(.trailing, 15)
                                        }
                                        .padding(.vertical, 15)
                                        .padding(.horizontal, 16)
                                        
                                        // üõë –§–û–ù –ö–ê–†–¢–ö–ò –¢–ê –°–¢–ò–õ–Ü
                                        .background(Color.white.opacity(0.15))
                                        .cornerRadius(10)
                                        .shadow(color: .black.opacity(0.3), radius: 3, x: 0, y: 1)
                                    }
                                    .buttonStyle(.plain)
                                    
                                    // üõë –ï–§–ï–ö–¢ –ó–ú–Ü–©–ï–ù–ù–Ø –í–ú–Ü–°–¢–£: –ó–º—ñ—â—É—î–º–æ –≤—Å—é –∫–∞—Ä—Ç–∫—É –≤–ø—Ä–∞–≤–æ, –∫–æ–ª–∏ isEditing = true
                                    .offset(x: isEditing ? editingOffset : 0)
                                    
                                } // –ó–∞–∫—Ä–∏—Ç—Ç—è HStack
                                .clipped() // –û–±—Ä—ñ–∑–∞—î–º–æ –≤–º—ñ—Å—Ç, —â–æ–± –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–µ –≤–∏—Ö–æ–¥–∏–ª–∏ –∑–∞ –º–µ–∂—ñ
                                
                            } // –ó–∞–∫—Ä–∏—Ç—Ç—è ForEach
                            
                            Spacer(minLength: geometry.size.height - 300)
                            
                        } // –ó–∞–∫—Ä–∏—Ç—Ç—è LazyVStack
                        .padding(.horizontal, 16)
                        
                    } // –ó–∞–∫—Ä–∏—Ç—Ç—è ScrollView
                    
                } // –ó–∞–∫—Ä–∏—Ç—Ç—è VStack
                .foregroundColor(.white)
                .shadow(color: .black.opacity(0.6), radius: 3, x: 0, y: 1)
            } // –ó–∞–∫—Ä–∏—Ç—Ç—è ZStack
        } // –ó–∞–∫—Ä–∏—Ç—Ç—è GeometryReader
    }
}
